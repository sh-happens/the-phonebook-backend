{"version":3,"sources":["component/PhoneList.js","component/Filter.js","component/PersonForm.js","services/persons.js","App.js","index.js"],"names":["PhoneList","persons","showFilter","removeEntry","filterUppercase","toUpperCase","filter","person","name","includes","map","key","number","onClick","Filter","setShowFilter","value","onChange","event","target","PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","setPersons","setNewName","setNewNumber","setShowfilter","setNotification","setSuccess","useEffect","personService","catch","error","showMessage","message","successNotification","setTimeout","preventDefault","personObject","some","e","personId","find","item","updatedEntry","Object","assign","window","confirm","n","alert","returnedPerson","concat","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a91a1b63.chunk.js","sourcesContent":["import React from \"react\";\n\nconst PhoneList = ({ persons, showFilter, removeEntry }) => {\n  let filterUppercase = showFilter.toUpperCase();\n  let newPersonArray = persons.filter((person) => {\n    let personInUppercase = person.name.toUpperCase();\n    return personInUppercase.includes(filterUppercase);\n  });\n\n  return newPersonArray.map((person) => (\n    <li key={person.name}>\n      {person.name} : {person.number}\n      <button onClick={() => removeEntry(person)}>Delete</button>\n    </li>\n  ));\n};\n\nexport default PhoneList;\n","import React from \"react\";\n\nconst Filter = ({ showFilter, setShowFilter }) => {\n  const filteredPerson = (event) => {\n    setShowFilter(event.target.value);\n  };\n\n  return (\n    <div>\n      filter shown with <input value={showFilter} onChange={filteredPerson} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  addPerson,\n  newName,\n  newNumber,\n  handleNameChange,\n  handleNumberChange,\n}) => {\n  return (\n    <>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type='submit'>add</button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default PersonForm;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","import React, { useState, useEffect } from \"react\";\nimport PhoneList from \"./component/PhoneList\";\nimport Filter from \"./component/Filter\";\nimport PersonForm from \"./component/PersonForm\";\nimport personService from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [showFilter, setShowfilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((response) => {\n        setPersons(response);\n      })\n      .catch((error) => {\n        showMessage(\"Could not restrieve data\", false);\n      });\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    if (persons.some((e) => e.name === newName)) {\n      let personId = persons.find((item) => item.name === newName);\n\n      let updatedEntry = Object.assign(personId, personObject);\n\n      if (\n        window.confirm(\n          `Do you want to update ${newName} with new ${newNumber}?`\n        )\n      ) {\n        personService\n          .update(personId.id, personObject)\n          .then(() => {\n            setPersons(\n              persons.map((item) =>\n                item.name === newName ? updatedEntry : item\n              )\n            );\n            setNewNumber(\"\");\n            setNewNumber(\"\");\n            showMessage(`User ${newName} phone number updated`);\n          })\n          .catch((error) => {\n            showMessage(\n              `Update failed. User ${newName} has already been removed from the phone book.`,\n              false\n            );\n            setPersons(persons.filter((n) => n.name !== newName));\n          });\n      }\n    } else {\n      if (persons.some((e) => e.number === newNumber)) {\n        return alert(`# ${newNumber} is already in the phone book.`, false);\n      } else {\n        if (newName === \"\" || newNumber === \"\") {\n          return alert(`The name and number must not be empty`, false);\n        } else {\n          personService\n            .create(personObject)\n            .then((returnedPerson) => {\n              setPersons(persons.concat(returnedPerson));\n              setNewName(\"\");\n              setNewNumber(\"\");\n              showMessage(`User ${newName} has been added to the phone book`);\n            })\n            .catch((error) => {\n              console.log(error.response.data.error);\n              return showMessage(\n                `Failed to add number. More about error: ${error.response.data.error}`,\n                false\n              );\n            });\n          personService\n            .getAll()\n            .then((response) => {\n              setPersons(response);\n            })\n            .catch((error) => showMessage(\"Could not retrieve data\", false));\n        }\n      }\n    }\n\n    personService.create(personObject).then((response) => {\n      setPersons(persons.concat(response));\n      setNewName(\"\");\n      setNewNumber(\"\");\n    });\n  };\n\n  const removeEntry = (person) => {\n    if (window.confirm(`Remove ${person.name}?`)) {\n      personService\n        .remove(person.id)\n        .then(() => {\n          setPersons(persons.filter((item) => item.id !== person.id));\n          showMessage(`${person.name} has been removed from the phone book`);\n        })\n        .catch((error) => {\n          showMessage(\n            `Remove failed. User ${person.name} has already been removed from the phone book.`,\n            false\n          );\n          personService\n            .getAll()\n            .then((response) => {\n              setPersons(response);\n            })\n            .catch((error) => showMessage(\"Could not retrieve data\", false));\n        });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const showMessage = (message, successNotification = true) => {\n    setNotification(message);\n    setSuccess(successNotification);\n\n    setTimeout(() => {\n      setNotification(null);\n      setSuccess(null);\n    }, 8000);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter showFilter={showFilter} setShowFilter={setShowfilter} />\n      <h3>add a new</h3>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <ul>\n        <PhoneList\n          persons={persons}\n          showFilter={showFilter}\n          removeEntry={removeEntry}\n        />\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}